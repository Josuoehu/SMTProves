(set-option :produce-models true)
(set-logic QF_UFLIA)
(declare-fun t0_0 () Int)
(declare-fun t1_0 () Int)
(declare-fun t2_0 () Int)
(declare-fun t3_0 () Int)
(declare-fun t4_0 () Int)
(declare-fun t5_0 () Int)
(declare-fun t6_0 () Int)
(declare-fun t7_0 () Int)
(declare-fun t8_0 () Int)
(declare-fun t9_0 () Int)
(declare-fun at (Int Int) Int)
(declare-fun board (Int Int Int Int) Bool)
(declare-fun capacity (Int Int) Int)
(declare-fun debark (Int Int Int Int) Bool)
(declare-fun distance (Int Int Int) Int)
(declare-fun fly (Int Int Int Int) Bool)
(declare-fun fuel (Int Int) Int)
(declare-fun in (Int Int) Int)
(declare-fun onboard (Int Int) Int)
(declare-fun refuel (Int Int) Bool)
(declare-fun seats (Int Int) Int)
(declare-fun plane1 () Int)
(declare-fun city1 () Int)
(declare-fun city2 () Int)
(declare-fun city3 () Int)
(declare-fun city4 () Int)
(declare-fun city5 () Int)
(declare-fun person1 () Int)
(declare-fun person2 () Int)
(declare-fun person3 () Int)
(declare-fun person4 () Int)
(declare-fun t0_1 () Int)
(declare-fun t1_1 () Int)
(declare-fun t2_1 () Int)
(declare-fun t3_1 () Int)
(declare-fun t4_1 () Int)
(declare-fun t5_1 () Int)
(declare-fun t6_1 () Int)
(declare-fun t7_1 () Int)
(declare-fun t8_1 () Int)
(declare-fun t9_1 () Int)
(declare-fun t0_2 () Int)
(declare-fun t1_2 () Int)
(declare-fun t2_2 () Int)
(declare-fun t3_2 () Int)
(declare-fun t4_2 () Int)
(declare-fun t5_2 () Int)
(declare-fun t6_2 () Int)
(declare-fun t7_2 () Int)
(declare-fun t8_2 () Int)
(declare-fun t9_2 () Int)
(declare-fun t0_3 () Int)
(declare-fun t1_3 () Int)
(declare-fun t2_3 () Int)
(declare-fun t3_3 () Int)
(declare-fun t4_3 () Int)
(declare-fun t5_3 () Int)
(declare-fun t6_3 () Int)
(declare-fun t7_3 () Int)
(declare-fun t8_3 () Int)
(declare-fun t9_3 () Int)
(declare-fun t0_4 () Int)
(declare-fun t1_4 () Int)
(declare-fun t2_4 () Int)
(declare-fun t3_4 () Int)
(declare-fun t4_4 () Int)
(declare-fun t5_4 () Int)
(declare-fun t6_4 () Int)
(declare-fun t7_4 () Int)
(declare-fun t8_4 () Int)
(declare-fun t9_4 () Int)
(declare-fun t0_5 () Int)
(declare-fun t1_5 () Int)
(declare-fun t2_5 () Int)
(declare-fun t3_5 () Int)
(declare-fun t4_5 () Int)
(declare-fun t5_5 () Int)
(declare-fun t6_5 () Int)
(declare-fun t7_5 () Int)
(declare-fun t8_5 () Int)
(declare-fun t9_5 () Int)
(assert (or (= t0_0 7) (= t0_0 8) (= t0_0 9) (= t0_0 10) ))
(assert (or (= t1_0 1) ))
(assert (or (= t2_0 2) (= t2_0 3) (= t2_0 4) (= t2_0 5) (= t2_0 6) ))
(assert (or (= t3_0 7) (= t3_0 8) (= t3_0 9) (= t3_0 10) ))
(assert (or (= t4_0 1) ))
(assert (or (= t5_0 2) (= t5_0 3) (= t5_0 4) (= t5_0 5) (= t5_0 6) ))
(assert (or (= t6_0 1) ))
(assert (or (= t7_0 2) (= t7_0 3) (= t7_0 4) (= t7_0 5) (= t7_0 6) ))
(assert (or (= t8_0 2) (= t8_0 3) (= t8_0 4) (= t8_0 5) (= t8_0 6) ))
(assert (or (= t9_0 1) ))
(assert (= plane1 1))
(assert (= city1 2))
(assert (= city2 3))
(assert (= city3 4))
(assert (= city4 5))
(assert (= city5 6))
(assert (= person1 7))
(assert (= person2 8))
(assert (= person3 9))
(assert (= person4 10))
(assert (= (at plane1 0) city1))
(assert (= (capacity plane1 0) 6000))
(assert (= (fuel plane1 0) 6000))
(assert (= (seats plane1 0) 2))
(assert (= (onboard plane1 0) 0))
(assert (= (at person1 0) city1))
(assert (= (at person2 0) city2))
(assert (= (at person3 0) city3))
(assert (= (at person4 0) city4))
(assert (= (in person1 0) 0))
(assert (= (in person2 0) 0))
(assert (= (in person3 0) 0))
(assert (= (in person4 0) 0))
(assert (= (distance city1 city2 0) 899))
(assert (= (distance city1 city3 0) 529))
(assert (= (distance city1 city4 0) 649))
(assert (= (distance city1 city5 0) 456))
(assert (= (distance city2 city1 0) 899))
(assert (= (distance city2 city3 0) 722))
(assert (= (distance city2 city4 0) 341))
(assert (= (distance city2 city5 0) 789))
(assert (= (distance city3 city1 0) 529))
(assert (= (distance city3 city2 0) 722))
(assert (= (distance city3 city4 0) 663))
(assert (= (distance city3 city5 0) 546))
(assert (= (distance city4 city1 0) 649))
(assert (= (distance city4 city2 0) 341))
(assert (= (distance city4 city3 0) 663))
(assert (= (distance city4 city5 0) 324))
(assert (= (distance city5 city1 0) 456))
(assert (= (distance city5 city2 0) 789))
(assert (= (distance city5 city3 0) 546))
(assert (= (distance city5 city4 0) 324))
(assert (=> (board t0_0 t1_0 t2_0 0) (and (= (at t0_0 0) t2_0) (= (at t1_0 0) t2_0) (> (seats t1_0 0) (onboard t1_0 0)))) )
(assert (=> (debark t3_0 t4_0 t5_0 0) (and (= (in t3_0 0) t4_0) (= (at t4_0 0) t5_0))) )
(assert (=> (fly t6_0 t7_0 t8_0 0) (and (= (at t6_0 0) t7_0) (> (onboard t6_0 0) 0) (>= (fuel t6_0 0) (distance t7_0 t8_0 0)))) )
(assert (=> (refuel t9_0 0) (and (< (* (fuel t9_0 0) 2) (capacity t9_0 0)) (= (onboard t9_0 0) 0))) )
(assert (=> (and (board t0_0 t1_0 t2_0 0) true) (and (= (at t0_0 1) 0) (= (in t0_0 1) t1_0) (= (onboard t1_0 1) (+ (onboard t1_0 0) 1)))) )
(assert (=> (and (debark t3_0 t4_0 t5_0 0) true) (and (= (in t3_0 1) 0) (= (at t3_0 1) t5_0) (= (onboard t4_0 1) (- (onboard t4_0 0) 1)))) )
(assert (=> (and (fly t6_0 t7_0 t8_0 0) true) (and (= (at t6_0 1) t8_0) (= (fuel t6_0 1) (- (fuel t6_0 0) (distance t7_0 t8_0 0))))) )
(assert (=> (and (refuel t9_0 0) true) (and (= (fuel t9_0 1) (capacity t9_0 0)))) )
(assert (=> (distinct (at person1 0) (at person1 1)) (or (and (board t0_0 t1_0 t2_0 0)(= t0_0 person1) ) (and (debark t3_0 t4_0 t5_0 0)(= t3_0 person1) ) (and (fly t6_0 t7_0 t8_0 0)(= t6_0 person1) ) )) )
(assert (=> (distinct (at person2 0) (at person2 1)) (or (and (board t0_0 t1_0 t2_0 0)(= t0_0 person2) ) (and (debark t3_0 t4_0 t5_0 0)(= t3_0 person2) ) (and (fly t6_0 t7_0 t8_0 0)(= t6_0 person2) ) )) )
(assert (=> (distinct (at person3 0) (at person3 1)) (or (and (board t0_0 t1_0 t2_0 0)(= t0_0 person3) ) (and (debark t3_0 t4_0 t5_0 0)(= t3_0 person3) ) (and (fly t6_0 t7_0 t8_0 0)(= t6_0 person3) ) )) )
(assert (=> (distinct (at person4 0) (at person4 1)) (or (and (board t0_0 t1_0 t2_0 0)(= t0_0 person4) ) (and (debark t3_0 t4_0 t5_0 0)(= t3_0 person4) ) (and (fly t6_0 t7_0 t8_0 0)(= t6_0 person4) ) )) )
(assert (=> (distinct (at plane1 0) (at plane1 1)) (or (and (board t0_0 t1_0 t2_0 0)(= t0_0 plane1) ) (and (debark t3_0 t4_0 t5_0 0)(= t3_0 plane1) ) (and (fly t6_0 t7_0 t8_0 0)(= t6_0 plane1) ) )) )
(assert (= (capacity plane1 0) (capacity plane1 1)) )
(assert (= (distance city1 city2 0) (distance city1 city2 1)) )
(assert (= (distance city1 city3 0) (distance city1 city3 1)) )
(assert (= (distance city1 city4 0) (distance city1 city4 1)) )
(assert (= (distance city1 city5 0) (distance city1 city5 1)) )
(assert (= (distance city2 city1 0) (distance city2 city1 1)) )
(assert (= (distance city2 city3 0) (distance city2 city3 1)) )
(assert (= (distance city2 city4 0) (distance city2 city4 1)) )
(assert (= (distance city2 city5 0) (distance city2 city5 1)) )
(assert (= (distance city3 city1 0) (distance city3 city1 1)) )
(assert (= (distance city3 city2 0) (distance city3 city2 1)) )
(assert (= (distance city3 city4 0) (distance city3 city4 1)) )
(assert (= (distance city3 city5 0) (distance city3 city5 1)) )
(assert (= (distance city4 city1 0) (distance city4 city1 1)) )
(assert (= (distance city4 city2 0) (distance city4 city2 1)) )
(assert (= (distance city4 city3 0) (distance city4 city3 1)) )
(assert (= (distance city4 city5 0) (distance city4 city5 1)) )
(assert (= (distance city5 city1 0) (distance city5 city1 1)) )
(assert (= (distance city5 city2 0) (distance city5 city2 1)) )
(assert (= (distance city5 city3 0) (distance city5 city3 1)) )
(assert (= (distance city5 city4 0) (distance city5 city4 1)) )
(assert (=> (distinct (fuel plane1 0) (fuel plane1 1)) (or (and (fly t6_0 t7_0 t8_0 0)(= t6_0 plane1) ) (and (refuel t9_0 0)(= t9_0 plane1) ) )) )
(assert (=> (distinct (in person1 0) (in person1 1)) (or (and (board t0_0 t1_0 t2_0 0)(= t0_0 person1) ) (and (debark t3_0 t4_0 t5_0 0)(= t3_0 person1) ) )) )
(assert (=> (distinct (in person2 0) (in person2 1)) (or (and (board t0_0 t1_0 t2_0 0)(= t0_0 person2) ) (and (debark t3_0 t4_0 t5_0 0)(= t3_0 person2) ) )) )
(assert (=> (distinct (in person3 0) (in person3 1)) (or (and (board t0_0 t1_0 t2_0 0)(= t0_0 person3) ) (and (debark t3_0 t4_0 t5_0 0)(= t3_0 person3) ) )) )
(assert (=> (distinct (in person4 0) (in person4 1)) (or (and (board t0_0 t1_0 t2_0 0)(= t0_0 person4) ) (and (debark t3_0 t4_0 t5_0 0)(= t3_0 person4) ) )) )
(assert (=> (distinct (onboard plane1 0) (onboard plane1 1)) (or (and (board t0_0 t1_0 t2_0 0)(= t1_0 plane1) ) (and (debark t3_0 t4_0 t5_0 0)(= t4_0 plane1) ) )) )
(assert (= (seats plane1 0) (seats plane1 1)) )
(assert (or (board t0_0 t1_0 t2_0 0) (debark t3_0 t4_0 t5_0 0) (fly t6_0 t7_0 t8_0 0) (refuel t9_0 0) ) )
(assert (or (not (board t0_0 t1_0 t2_0 0)) (not (debark t3_0 t4_0 t5_0 0))) )
(assert (or (not (board t0_0 t1_0 t2_0 0)) (not (fly t6_0 t7_0 t8_0 0))) )
(assert (or (not (board t0_0 t1_0 t2_0 0)) (not (refuel t9_0 0))) )
(assert (or (not (debark t3_0 t4_0 t5_0 0)) (not (fly t6_0 t7_0 t8_0 0))) )
(assert (or (not (debark t3_0 t4_0 t5_0 0)) (not (refuel t9_0 0))) )
(assert (or (not (fly t6_0 t7_0 t8_0 0)) (not (refuel t9_0 0))) )
(assert (or (= t0_1 7) (= t0_1 8) (= t0_1 9) (= t0_1 10) ))
(assert (or (= t1_1 1) ))
(assert (or (= t2_1 2) (= t2_1 3) (= t2_1 4) (= t2_1 5) (= t2_1 6) ))
(assert (or (= t3_1 7) (= t3_1 8) (= t3_1 9) (= t3_1 10) ))
(assert (or (= t4_1 1) ))
(assert (or (= t5_1 2) (= t5_1 3) (= t5_1 4) (= t5_1 5) (= t5_1 6) ))
(assert (or (= t6_1 1) ))
(assert (or (= t7_1 2) (= t7_1 3) (= t7_1 4) (= t7_1 5) (= t7_1 6) ))
(assert (or (= t8_1 2) (= t8_1 3) (= t8_1 4) (= t8_1 5) (= t8_1 6) ))
(assert (or (= t9_1 1) ))
(assert (=> (board t0_1 t1_1 t2_1 1) (and (= (at t0_1 1) t2_1) (= (at t1_1 1) t2_1) (> (seats t1_1 1) (onboard t1_1 1)))) )
(assert (=> (debark t3_1 t4_1 t5_1 1) (and (= (in t3_1 1) t4_1) (= (at t4_1 1) t5_1))) )
(assert (=> (fly t6_1 t7_1 t8_1 1) (and (= (at t6_1 1) t7_1) (> (onboard t6_1 1) 0) (>= (fuel t6_1 1) (distance t7_1 t8_1 1)))) )
(assert (=> (refuel t9_1 1) (and (< (* (fuel t9_1 1) 2) (capacity t9_1 1)) (= (onboard t9_1 1) 0))) )
(assert (=> (and (board t0_1 t1_1 t2_1 1) true) (and (= (at t0_1 2) 0) (= (in t0_1 2) t1_1) (= (onboard t1_1 2) (+ (onboard t1_1 1) 1)))) )
(assert (=> (and (debark t3_1 t4_1 t5_1 1) true) (and (= (in t3_1 2) 0) (= (at t3_1 2) t5_1) (= (onboard t4_1 2) (- (onboard t4_1 1) 1)))) )
(assert (=> (and (fly t6_1 t7_1 t8_1 1) true) (and (= (at t6_1 2) t8_1) (= (fuel t6_1 2) (- (fuel t6_1 1) (distance t7_1 t8_1 1))))) )
(assert (=> (and (refuel t9_1 1) true) (and (= (fuel t9_1 2) (capacity t9_1 1)))) )
(assert (=> (distinct (at person1 1) (at person1 2)) (or (and (board t0_1 t1_1 t2_1 1)(= t0_1 person1) ) (and (debark t3_1 t4_1 t5_1 1)(= t3_1 person1) ) (and (fly t6_1 t7_1 t8_1 1)(= t6_1 person1) ) )) )
(assert (=> (distinct (at person2 1) (at person2 2)) (or (and (board t0_1 t1_1 t2_1 1)(= t0_1 person2) ) (and (debark t3_1 t4_1 t5_1 1)(= t3_1 person2) ) (and (fly t6_1 t7_1 t8_1 1)(= t6_1 person2) ) )) )
(assert (=> (distinct (at person3 1) (at person3 2)) (or (and (board t0_1 t1_1 t2_1 1)(= t0_1 person3) ) (and (debark t3_1 t4_1 t5_1 1)(= t3_1 person3) ) (and (fly t6_1 t7_1 t8_1 1)(= t6_1 person3) ) )) )
(assert (=> (distinct (at person4 1) (at person4 2)) (or (and (board t0_1 t1_1 t2_1 1)(= t0_1 person4) ) (and (debark t3_1 t4_1 t5_1 1)(= t3_1 person4) ) (and (fly t6_1 t7_1 t8_1 1)(= t6_1 person4) ) )) )
(assert (=> (distinct (at plane1 1) (at plane1 2)) (or (and (board t0_1 t1_1 t2_1 1)(= t0_1 plane1) ) (and (debark t3_1 t4_1 t5_1 1)(= t3_1 plane1) ) (and (fly t6_1 t7_1 t8_1 1)(= t6_1 plane1) ) )) )
(assert (= (capacity plane1 1) (capacity plane1 2)) )
(assert (= (distance city1 city2 1) (distance city1 city2 2)) )
(assert (= (distance city1 city3 1) (distance city1 city3 2)) )
(assert (= (distance city1 city4 1) (distance city1 city4 2)) )
(assert (= (distance city1 city5 1) (distance city1 city5 2)) )
(assert (= (distance city2 city1 1) (distance city2 city1 2)) )
(assert (= (distance city2 city3 1) (distance city2 city3 2)) )
(assert (= (distance city2 city4 1) (distance city2 city4 2)) )
(assert (= (distance city2 city5 1) (distance city2 city5 2)) )
(assert (= (distance city3 city1 1) (distance city3 city1 2)) )
(assert (= (distance city3 city2 1) (distance city3 city2 2)) )
(assert (= (distance city3 city4 1) (distance city3 city4 2)) )
(assert (= (distance city3 city5 1) (distance city3 city5 2)) )
(assert (= (distance city4 city1 1) (distance city4 city1 2)) )
(assert (= (distance city4 city2 1) (distance city4 city2 2)) )
(assert (= (distance city4 city3 1) (distance city4 city3 2)) )
(assert (= (distance city4 city5 1) (distance city4 city5 2)) )
(assert (= (distance city5 city1 1) (distance city5 city1 2)) )
(assert (= (distance city5 city2 1) (distance city5 city2 2)) )
(assert (= (distance city5 city3 1) (distance city5 city3 2)) )
(assert (= (distance city5 city4 1) (distance city5 city4 2)) )
(assert (=> (distinct (fuel plane1 1) (fuel plane1 2)) (or (and (fly t6_1 t7_1 t8_1 1)(= t6_1 plane1) ) (and (refuel t9_1 1)(= t9_1 plane1) ) )) )
(assert (=> (distinct (in person1 1) (in person1 2)) (or (and (board t0_1 t1_1 t2_1 1)(= t0_1 person1) ) (and (debark t3_1 t4_1 t5_1 1)(= t3_1 person1) ) )) )
(assert (=> (distinct (in person2 1) (in person2 2)) (or (and (board t0_1 t1_1 t2_1 1)(= t0_1 person2) ) (and (debark t3_1 t4_1 t5_1 1)(= t3_1 person2) ) )) )
(assert (=> (distinct (in person3 1) (in person3 2)) (or (and (board t0_1 t1_1 t2_1 1)(= t0_1 person3) ) (and (debark t3_1 t4_1 t5_1 1)(= t3_1 person3) ) )) )
(assert (=> (distinct (in person4 1) (in person4 2)) (or (and (board t0_1 t1_1 t2_1 1)(= t0_1 person4) ) (and (debark t3_1 t4_1 t5_1 1)(= t3_1 person4) ) )) )
(assert (=> (distinct (onboard plane1 1) (onboard plane1 2)) (or (and (board t0_1 t1_1 t2_1 1)(= t1_1 plane1) ) (and (debark t3_1 t4_1 t5_1 1)(= t4_1 plane1) ) )) )
(assert (= (seats plane1 1) (seats plane1 2)) )
(assert (or (board t0_1 t1_1 t2_1 1) (debark t3_1 t4_1 t5_1 1) (fly t6_1 t7_1 t8_1 1) (refuel t9_1 1) ) )
(assert (or (not (board t0_1 t1_1 t2_1 1)) (not (debark t3_1 t4_1 t5_1 1))) )
(assert (or (not (board t0_1 t1_1 t2_1 1)) (not (fly t6_1 t7_1 t8_1 1))) )
(assert (or (not (board t0_1 t1_1 t2_1 1)) (not (refuel t9_1 1))) )
(assert (or (not (debark t3_1 t4_1 t5_1 1)) (not (fly t6_1 t7_1 t8_1 1))) )
(assert (or (not (debark t3_1 t4_1 t5_1 1)) (not (refuel t9_1 1))) )
(assert (or (not (fly t6_1 t7_1 t8_1 1)) (not (refuel t9_1 1))) )
(assert (or (= t0_2 7) (= t0_2 8) (= t0_2 9) (= t0_2 10) ))
(assert (or (= t1_2 1) ))
(assert (or (= t2_2 2) (= t2_2 3) (= t2_2 4) (= t2_2 5) (= t2_2 6) ))
(assert (or (= t3_2 7) (= t3_2 8) (= t3_2 9) (= t3_2 10) ))
(assert (or (= t4_2 1) ))
(assert (or (= t5_2 2) (= t5_2 3) (= t5_2 4) (= t5_2 5) (= t5_2 6) ))
(assert (or (= t6_2 1) ))
(assert (or (= t7_2 2) (= t7_2 3) (= t7_2 4) (= t7_2 5) (= t7_2 6) ))
(assert (or (= t8_2 2) (= t8_2 3) (= t8_2 4) (= t8_2 5) (= t8_2 6) ))
(assert (or (= t9_2 1) ))
(assert (=> (board t0_2 t1_2 t2_2 2) (and (= (at t0_2 2) t2_2) (= (at t1_2 2) t2_2) (> (seats t1_2 2) (onboard t1_2 2)))) )
(assert (=> (debark t3_2 t4_2 t5_2 2) (and (= (in t3_2 2) t4_2) (= (at t4_2 2) t5_2))) )
(assert (=> (fly t6_2 t7_2 t8_2 2) (and (= (at t6_2 2) t7_2) (> (onboard t6_2 2) 0) (>= (fuel t6_2 2) (distance t7_2 t8_2 2)))) )
(assert (=> (refuel t9_2 2) (and (< (* (fuel t9_2 2) 2) (capacity t9_2 2)) (= (onboard t9_2 2) 0))) )
(assert (=> (and (board t0_2 t1_2 t2_2 2) true) (and (= (at t0_2 3) 0) (= (in t0_2 3) t1_2) (= (onboard t1_2 3) (+ (onboard t1_2 2) 1)))) )
(assert (=> (and (debark t3_2 t4_2 t5_2 2) true) (and (= (in t3_2 3) 0) (= (at t3_2 3) t5_2) (= (onboard t4_2 3) (- (onboard t4_2 2) 1)))) )
(assert (=> (and (fly t6_2 t7_2 t8_2 2) true) (and (= (at t6_2 3) t8_2) (= (fuel t6_2 3) (- (fuel t6_2 2) (distance t7_2 t8_2 2))))) )
(assert (=> (and (refuel t9_2 2) true) (and (= (fuel t9_2 3) (capacity t9_2 2)))) )
(assert (=> (distinct (at person1 2) (at person1 3)) (or (and (board t0_2 t1_2 t2_2 2)(= t0_2 person1) ) (and (debark t3_2 t4_2 t5_2 2)(= t3_2 person1) ) (and (fly t6_2 t7_2 t8_2 2)(= t6_2 person1) ) )) )
(assert (=> (distinct (at person2 2) (at person2 3)) (or (and (board t0_2 t1_2 t2_2 2)(= t0_2 person2) ) (and (debark t3_2 t4_2 t5_2 2)(= t3_2 person2) ) (and (fly t6_2 t7_2 t8_2 2)(= t6_2 person2) ) )) )
(assert (=> (distinct (at person3 2) (at person3 3)) (or (and (board t0_2 t1_2 t2_2 2)(= t0_2 person3) ) (and (debark t3_2 t4_2 t5_2 2)(= t3_2 person3) ) (and (fly t6_2 t7_2 t8_2 2)(= t6_2 person3) ) )) )
(assert (=> (distinct (at person4 2) (at person4 3)) (or (and (board t0_2 t1_2 t2_2 2)(= t0_2 person4) ) (and (debark t3_2 t4_2 t5_2 2)(= t3_2 person4) ) (and (fly t6_2 t7_2 t8_2 2)(= t6_2 person4) ) )) )
(assert (=> (distinct (at plane1 2) (at plane1 3)) (or (and (board t0_2 t1_2 t2_2 2)(= t0_2 plane1) ) (and (debark t3_2 t4_2 t5_2 2)(= t3_2 plane1) ) (and (fly t6_2 t7_2 t8_2 2)(= t6_2 plane1) ) )) )
(assert (= (capacity plane1 2) (capacity plane1 3)) )
(assert (= (distance city1 city2 2) (distance city1 city2 3)) )
(assert (= (distance city1 city3 2) (distance city1 city3 3)) )
(assert (= (distance city1 city4 2) (distance city1 city4 3)) )
(assert (= (distance city1 city5 2) (distance city1 city5 3)) )
(assert (= (distance city2 city1 2) (distance city2 city1 3)) )
(assert (= (distance city2 city3 2) (distance city2 city3 3)) )
(assert (= (distance city2 city4 2) (distance city2 city4 3)) )
(assert (= (distance city2 city5 2) (distance city2 city5 3)) )
(assert (= (distance city3 city1 2) (distance city3 city1 3)) )
(assert (= (distance city3 city2 2) (distance city3 city2 3)) )
(assert (= (distance city3 city4 2) (distance city3 city4 3)) )
(assert (= (distance city3 city5 2) (distance city3 city5 3)) )
(assert (= (distance city4 city1 2) (distance city4 city1 3)) )
(assert (= (distance city4 city2 2) (distance city4 city2 3)) )
(assert (= (distance city4 city3 2) (distance city4 city3 3)) )
(assert (= (distance city4 city5 2) (distance city4 city5 3)) )
(assert (= (distance city5 city1 2) (distance city5 city1 3)) )
(assert (= (distance city5 city2 2) (distance city5 city2 3)) )
(assert (= (distance city5 city3 2) (distance city5 city3 3)) )
(assert (= (distance city5 city4 2) (distance city5 city4 3)) )
(assert (=> (distinct (fuel plane1 2) (fuel plane1 3)) (or (and (fly t6_2 t7_2 t8_2 2)(= t6_2 plane1) ) (and (refuel t9_2 2)(= t9_2 plane1) ) )) )
(assert (=> (distinct (in person1 2) (in person1 3)) (or (and (board t0_2 t1_2 t2_2 2)(= t0_2 person1) ) (and (debark t3_2 t4_2 t5_2 2)(= t3_2 person1) ) )) )
(assert (=> (distinct (in person2 2) (in person2 3)) (or (and (board t0_2 t1_2 t2_2 2)(= t0_2 person2) ) (and (debark t3_2 t4_2 t5_2 2)(= t3_2 person2) ) )) )
(assert (=> (distinct (in person3 2) (in person3 3)) (or (and (board t0_2 t1_2 t2_2 2)(= t0_2 person3) ) (and (debark t3_2 t4_2 t5_2 2)(= t3_2 person3) ) )) )
(assert (=> (distinct (in person4 2) (in person4 3)) (or (and (board t0_2 t1_2 t2_2 2)(= t0_2 person4) ) (and (debark t3_2 t4_2 t5_2 2)(= t3_2 person4) ) )) )
(assert (=> (distinct (onboard plane1 2) (onboard plane1 3)) (or (and (board t0_2 t1_2 t2_2 2)(= t1_2 plane1) ) (and (debark t3_2 t4_2 t5_2 2)(= t4_2 plane1) ) )) )
(assert (= (seats plane1 2) (seats plane1 3)) )
(assert (or (board t0_2 t1_2 t2_2 2) (debark t3_2 t4_2 t5_2 2) (fly t6_2 t7_2 t8_2 2) (refuel t9_2 2) ) )
(assert (or (not (board t0_2 t1_2 t2_2 2)) (not (debark t3_2 t4_2 t5_2 2))) )
(assert (or (not (board t0_2 t1_2 t2_2 2)) (not (fly t6_2 t7_2 t8_2 2))) )
(assert (or (not (board t0_2 t1_2 t2_2 2)) (not (refuel t9_2 2))) )
(assert (or (not (debark t3_2 t4_2 t5_2 2)) (not (fly t6_2 t7_2 t8_2 2))) )
(assert (or (not (debark t3_2 t4_2 t5_2 2)) (not (refuel t9_2 2))) )
(assert (or (not (fly t6_2 t7_2 t8_2 2)) (not (refuel t9_2 2))) )
(assert (or (= t0_3 7) (= t0_3 8) (= t0_3 9) (= t0_3 10) ))
(assert (or (= t1_3 1) ))
(assert (or (= t2_3 2) (= t2_3 3) (= t2_3 4) (= t2_3 5) (= t2_3 6) ))
(assert (or (= t3_3 7) (= t3_3 8) (= t3_3 9) (= t3_3 10) ))
(assert (or (= t4_3 1) ))
(assert (or (= t5_3 2) (= t5_3 3) (= t5_3 4) (= t5_3 5) (= t5_3 6) ))
(assert (or (= t6_3 1) ))
(assert (or (= t7_3 2) (= t7_3 3) (= t7_3 4) (= t7_3 5) (= t7_3 6) ))
(assert (or (= t8_3 2) (= t8_3 3) (= t8_3 4) (= t8_3 5) (= t8_3 6) ))
(assert (or (= t9_3 1) ))
(assert (=> (board t0_3 t1_3 t2_3 3) (and (= (at t0_3 3) t2_3) (= (at t1_3 3) t2_3) (> (seats t1_3 3) (onboard t1_3 3)))) )
(assert (=> (debark t3_3 t4_3 t5_3 3) (and (= (in t3_3 3) t4_3) (= (at t4_3 3) t5_3))) )
(assert (=> (fly t6_3 t7_3 t8_3 3) (and (= (at t6_3 3) t7_3) (> (onboard t6_3 3) 0) (>= (fuel t6_3 3) (distance t7_3 t8_3 3)))) )
(assert (=> (refuel t9_3 3) (and (< (* (fuel t9_3 3) 2) (capacity t9_3 3)) (= (onboard t9_3 3) 0))) )
(assert (=> (and (board t0_3 t1_3 t2_3 3) true) (and (= (at t0_3 4) 0) (= (in t0_3 4) t1_3) (= (onboard t1_3 4) (+ (onboard t1_3 3) 1)))) )
(assert (=> (and (debark t3_3 t4_3 t5_3 3) true) (and (= (in t3_3 4) 0) (= (at t3_3 4) t5_3) (= (onboard t4_3 4) (- (onboard t4_3 3) 1)))) )
(assert (=> (and (fly t6_3 t7_3 t8_3 3) true) (and (= (at t6_3 4) t8_3) (= (fuel t6_3 4) (- (fuel t6_3 3) (distance t7_3 t8_3 3))))) )
(assert (=> (and (refuel t9_3 3) true) (and (= (fuel t9_3 4) (capacity t9_3 3)))) )
(assert (=> (distinct (at person1 3) (at person1 4)) (or (and (board t0_3 t1_3 t2_3 3)(= t0_3 person1) ) (and (debark t3_3 t4_3 t5_3 3)(= t3_3 person1) ) (and (fly t6_3 t7_3 t8_3 3)(= t6_3 person1) ) )) )
(assert (=> (distinct (at person2 3) (at person2 4)) (or (and (board t0_3 t1_3 t2_3 3)(= t0_3 person2) ) (and (debark t3_3 t4_3 t5_3 3)(= t3_3 person2) ) (and (fly t6_3 t7_3 t8_3 3)(= t6_3 person2) ) )) )
(assert (=> (distinct (at person3 3) (at person3 4)) (or (and (board t0_3 t1_3 t2_3 3)(= t0_3 person3) ) (and (debark t3_3 t4_3 t5_3 3)(= t3_3 person3) ) (and (fly t6_3 t7_3 t8_3 3)(= t6_3 person3) ) )) )
(assert (=> (distinct (at person4 3) (at person4 4)) (or (and (board t0_3 t1_3 t2_3 3)(= t0_3 person4) ) (and (debark t3_3 t4_3 t5_3 3)(= t3_3 person4) ) (and (fly t6_3 t7_3 t8_3 3)(= t6_3 person4) ) )) )
(assert (=> (distinct (at plane1 3) (at plane1 4)) (or (and (board t0_3 t1_3 t2_3 3)(= t0_3 plane1) ) (and (debark t3_3 t4_3 t5_3 3)(= t3_3 plane1) ) (and (fly t6_3 t7_3 t8_3 3)(= t6_3 plane1) ) )) )
(assert (= (capacity plane1 3) (capacity plane1 4)) )
(assert (= (distance city1 city2 3) (distance city1 city2 4)) )
(assert (= (distance city1 city3 3) (distance city1 city3 4)) )
(assert (= (distance city1 city4 3) (distance city1 city4 4)) )
(assert (= (distance city1 city5 3) (distance city1 city5 4)) )
(assert (= (distance city2 city1 3) (distance city2 city1 4)) )
(assert (= (distance city2 city3 3) (distance city2 city3 4)) )
(assert (= (distance city2 city4 3) (distance city2 city4 4)) )
(assert (= (distance city2 city5 3) (distance city2 city5 4)) )
(assert (= (distance city3 city1 3) (distance city3 city1 4)) )
(assert (= (distance city3 city2 3) (distance city3 city2 4)) )
(assert (= (distance city3 city4 3) (distance city3 city4 4)) )
(assert (= (distance city3 city5 3) (distance city3 city5 4)) )
(assert (= (distance city4 city1 3) (distance city4 city1 4)) )
(assert (= (distance city4 city2 3) (distance city4 city2 4)) )
(assert (= (distance city4 city3 3) (distance city4 city3 4)) )
(assert (= (distance city4 city5 3) (distance city4 city5 4)) )
(assert (= (distance city5 city1 3) (distance city5 city1 4)) )
(assert (= (distance city5 city2 3) (distance city5 city2 4)) )
(assert (= (distance city5 city3 3) (distance city5 city3 4)) )
(assert (= (distance city5 city4 3) (distance city5 city4 4)) )
(assert (=> (distinct (fuel plane1 3) (fuel plane1 4)) (or (and (fly t6_3 t7_3 t8_3 3)(= t6_3 plane1) ) (and (refuel t9_3 3)(= t9_3 plane1) ) )) )
(assert (=> (distinct (in person1 3) (in person1 4)) (or (and (board t0_3 t1_3 t2_3 3)(= t0_3 person1) ) (and (debark t3_3 t4_3 t5_3 3)(= t3_3 person1) ) )) )
(assert (=> (distinct (in person2 3) (in person2 4)) (or (and (board t0_3 t1_3 t2_3 3)(= t0_3 person2) ) (and (debark t3_3 t4_3 t5_3 3)(= t3_3 person2) ) )) )
(assert (=> (distinct (in person3 3) (in person3 4)) (or (and (board t0_3 t1_3 t2_3 3)(= t0_3 person3) ) (and (debark t3_3 t4_3 t5_3 3)(= t3_3 person3) ) )) )
(assert (=> (distinct (in person4 3) (in person4 4)) (or (and (board t0_3 t1_3 t2_3 3)(= t0_3 person4) ) (and (debark t3_3 t4_3 t5_3 3)(= t3_3 person4) ) )) )
(assert (=> (distinct (onboard plane1 3) (onboard plane1 4)) (or (and (board t0_3 t1_3 t2_3 3)(= t1_3 plane1) ) (and (debark t3_3 t4_3 t5_3 3)(= t4_3 plane1) ) )) )
(assert (= (seats plane1 3) (seats plane1 4)) )
(assert (or (board t0_3 t1_3 t2_3 3) (debark t3_3 t4_3 t5_3 3) (fly t6_3 t7_3 t8_3 3) (refuel t9_3 3) ) )
(assert (or (not (board t0_3 t1_3 t2_3 3)) (not (debark t3_3 t4_3 t5_3 3))) )
(assert (or (not (board t0_3 t1_3 t2_3 3)) (not (fly t6_3 t7_3 t8_3 3))) )
(assert (or (not (board t0_3 t1_3 t2_3 3)) (not (refuel t9_3 3))) )
(assert (or (not (debark t3_3 t4_3 t5_3 3)) (not (fly t6_3 t7_3 t8_3 3))) )
(assert (or (not (debark t3_3 t4_3 t5_3 3)) (not (refuel t9_3 3))) )
(assert (or (not (fly t6_3 t7_3 t8_3 3)) (not (refuel t9_3 3))) )
(assert (or (= t0_4 7) (= t0_4 8) (= t0_4 9) (= t0_4 10) ))
(assert (or (= t1_4 1) ))
(assert (or (= t2_4 2) (= t2_4 3) (= t2_4 4) (= t2_4 5) (= t2_4 6) ))
(assert (or (= t3_4 7) (= t3_4 8) (= t3_4 9) (= t3_4 10) ))
(assert (or (= t4_4 1) ))
(assert (or (= t5_4 2) (= t5_4 3) (= t5_4 4) (= t5_4 5) (= t5_4 6) ))
(assert (or (= t6_4 1) ))
(assert (or (= t7_4 2) (= t7_4 3) (= t7_4 4) (= t7_4 5) (= t7_4 6) ))
(assert (or (= t8_4 2) (= t8_4 3) (= t8_4 4) (= t8_4 5) (= t8_4 6) ))
(assert (or (= t9_4 1) ))
(assert (=> (board t0_4 t1_4 t2_4 4) (and (= (at t0_4 4) t2_4) (= (at t1_4 4) t2_4) (> (seats t1_4 4) (onboard t1_4 4)))) )
(assert (=> (debark t3_4 t4_4 t5_4 4) (and (= (in t3_4 4) t4_4) (= (at t4_4 4) t5_4))) )
(assert (=> (fly t6_4 t7_4 t8_4 4) (and (= (at t6_4 4) t7_4) (> (onboard t6_4 4) 0) (>= (fuel t6_4 4) (distance t7_4 t8_4 4)))) )
(assert (=> (refuel t9_4 4) (and (< (* (fuel t9_4 4) 2) (capacity t9_4 4)) (= (onboard t9_4 4) 0))) )
(assert (=> (and (board t0_4 t1_4 t2_4 4) true) (and (= (at t0_4 5) 0) (= (in t0_4 5) t1_4) (= (onboard t1_4 5) (+ (onboard t1_4 4) 1)))) )
(assert (=> (and (debark t3_4 t4_4 t5_4 4) true) (and (= (in t3_4 5) 0) (= (at t3_4 5) t5_4) (= (onboard t4_4 5) (- (onboard t4_4 4) 1)))) )
(assert (=> (and (fly t6_4 t7_4 t8_4 4) true) (and (= (at t6_4 5) t8_4) (= (fuel t6_4 5) (- (fuel t6_4 4) (distance t7_4 t8_4 4))))) )
(assert (=> (and (refuel t9_4 4) true) (and (= (fuel t9_4 5) (capacity t9_4 4)))) )
(assert (=> (distinct (at person1 4) (at person1 5)) (or (and (board t0_4 t1_4 t2_4 4)(= t0_4 person1) ) (and (debark t3_4 t4_4 t5_4 4)(= t3_4 person1) ) (and (fly t6_4 t7_4 t8_4 4)(= t6_4 person1) ) )) )
(assert (=> (distinct (at person2 4) (at person2 5)) (or (and (board t0_4 t1_4 t2_4 4)(= t0_4 person2) ) (and (debark t3_4 t4_4 t5_4 4)(= t3_4 person2) ) (and (fly t6_4 t7_4 t8_4 4)(= t6_4 person2) ) )) )
(assert (=> (distinct (at person3 4) (at person3 5)) (or (and (board t0_4 t1_4 t2_4 4)(= t0_4 person3) ) (and (debark t3_4 t4_4 t5_4 4)(= t3_4 person3) ) (and (fly t6_4 t7_4 t8_4 4)(= t6_4 person3) ) )) )
(assert (=> (distinct (at person4 4) (at person4 5)) (or (and (board t0_4 t1_4 t2_4 4)(= t0_4 person4) ) (and (debark t3_4 t4_4 t5_4 4)(= t3_4 person4) ) (and (fly t6_4 t7_4 t8_4 4)(= t6_4 person4) ) )) )
(assert (=> (distinct (at plane1 4) (at plane1 5)) (or (and (board t0_4 t1_4 t2_4 4)(= t0_4 plane1) ) (and (debark t3_4 t4_4 t5_4 4)(= t3_4 plane1) ) (and (fly t6_4 t7_4 t8_4 4)(= t6_4 plane1) ) )) )
(assert (= (capacity plane1 4) (capacity plane1 5)) )
(assert (= (distance city1 city2 4) (distance city1 city2 5)) )
(assert (= (distance city1 city3 4) (distance city1 city3 5)) )
(assert (= (distance city1 city4 4) (distance city1 city4 5)) )
(assert (= (distance city1 city5 4) (distance city1 city5 5)) )
(assert (= (distance city2 city1 4) (distance city2 city1 5)) )
(assert (= (distance city2 city3 4) (distance city2 city3 5)) )
(assert (= (distance city2 city4 4) (distance city2 city4 5)) )
(assert (= (distance city2 city5 4) (distance city2 city5 5)) )
(assert (= (distance city3 city1 4) (distance city3 city1 5)) )
(assert (= (distance city3 city2 4) (distance city3 city2 5)) )
(assert (= (distance city3 city4 4) (distance city3 city4 5)) )
(assert (= (distance city3 city5 4) (distance city3 city5 5)) )
(assert (= (distance city4 city1 4) (distance city4 city1 5)) )
(assert (= (distance city4 city2 4) (distance city4 city2 5)) )
(assert (= (distance city4 city3 4) (distance city4 city3 5)) )
(assert (= (distance city4 city5 4) (distance city4 city5 5)) )
(assert (= (distance city5 city1 4) (distance city5 city1 5)) )
(assert (= (distance city5 city2 4) (distance city5 city2 5)) )
(assert (= (distance city5 city3 4) (distance city5 city3 5)) )
(assert (= (distance city5 city4 4) (distance city5 city4 5)) )
(assert (=> (distinct (fuel plane1 4) (fuel plane1 5)) (or (and (fly t6_4 t7_4 t8_4 4)(= t6_4 plane1) ) (and (refuel t9_4 4)(= t9_4 plane1) ) )) )
(assert (=> (distinct (in person1 4) (in person1 5)) (or (and (board t0_4 t1_4 t2_4 4)(= t0_4 person1) ) (and (debark t3_4 t4_4 t5_4 4)(= t3_4 person1) ) )) )
(assert (=> (distinct (in person2 4) (in person2 5)) (or (and (board t0_4 t1_4 t2_4 4)(= t0_4 person2) ) (and (debark t3_4 t4_4 t5_4 4)(= t3_4 person2) ) )) )
(assert (=> (distinct (in person3 4) (in person3 5)) (or (and (board t0_4 t1_4 t2_4 4)(= t0_4 person3) ) (and (debark t3_4 t4_4 t5_4 4)(= t3_4 person3) ) )) )
(assert (=> (distinct (in person4 4) (in person4 5)) (or (and (board t0_4 t1_4 t2_4 4)(= t0_4 person4) ) (and (debark t3_4 t4_4 t5_4 4)(= t3_4 person4) ) )) )
(assert (=> (distinct (onboard plane1 4) (onboard plane1 5)) (or (and (board t0_4 t1_4 t2_4 4)(= t1_4 plane1) ) (and (debark t3_4 t4_4 t5_4 4)(= t4_4 plane1) ) )) )
(assert (= (seats plane1 4) (seats plane1 5)) )
(assert (or (board t0_4 t1_4 t2_4 4) (debark t3_4 t4_4 t5_4 4) (fly t6_4 t7_4 t8_4 4) (refuel t9_4 4) ) )
(assert (or (not (board t0_4 t1_4 t2_4 4)) (not (debark t3_4 t4_4 t5_4 4))) )
(assert (or (not (board t0_4 t1_4 t2_4 4)) (not (fly t6_4 t7_4 t8_4 4))) )
(assert (or (not (board t0_4 t1_4 t2_4 4)) (not (refuel t9_4 4))) )
(assert (or (not (debark t3_4 t4_4 t5_4 4)) (not (fly t6_4 t7_4 t8_4 4))) )
(assert (or (not (debark t3_4 t4_4 t5_4 4)) (not (refuel t9_4 4))) )
(assert (or (not (fly t6_4 t7_4 t8_4 4)) (not (refuel t9_4 4))) )
(assert (or (= t0_5 7) (= t0_5 8) (= t0_5 9) (= t0_5 10) ))
(assert (or (= t1_5 1) ))
(assert (or (= t2_5 2) (= t2_5 3) (= t2_5 4) (= t2_5 5) (= t2_5 6) ))
(assert (or (= t3_5 7) (= t3_5 8) (= t3_5 9) (= t3_5 10) ))
(assert (or (= t4_5 1) ))
(assert (or (= t5_5 2) (= t5_5 3) (= t5_5 4) (= t5_5 5) (= t5_5 6) ))
(assert (or (= t6_5 1) ))
(assert (or (= t7_5 2) (= t7_5 3) (= t7_5 4) (= t7_5 5) (= t7_5 6) ))
(assert (or (= t8_5 2) (= t8_5 3) (= t8_5 4) (= t8_5 5) (= t8_5 6) ))
(assert (or (= t9_5 1) ))
(assert (=> (board t0_5 t1_5 t2_5 5) (and (= (at t0_5 5) t2_5) (= (at t1_5 5) t2_5) (> (seats t1_5 5) (onboard t1_5 5)))) )
(assert (=> (debark t3_5 t4_5 t5_5 5) (and (= (in t3_5 5) t4_5) (= (at t4_5 5) t5_5))) )
(assert (=> (fly t6_5 t7_5 t8_5 5) (and (= (at t6_5 5) t7_5) (> (onboard t6_5 5) 0) (>= (fuel t6_5 5) (distance t7_5 t8_5 5)))) )
(assert (=> (refuel t9_5 5) (and (< (* (fuel t9_5 5) 2) (capacity t9_5 5)) (= (onboard t9_5 5) 0))) )
(assert (=> (and (board t0_5 t1_5 t2_5 5) true) (and (= (at t0_5 6) 0) (= (in t0_5 6) t1_5) (= (onboard t1_5 6) (+ (onboard t1_5 5) 1)))) )
(assert (=> (and (debark t3_5 t4_5 t5_5 5) true) (and (= (in t3_5 6) 0) (= (at t3_5 6) t5_5) (= (onboard t4_5 6) (- (onboard t4_5 5) 1)))) )
(assert (=> (and (fly t6_5 t7_5 t8_5 5) true) (and (= (at t6_5 6) t8_5) (= (fuel t6_5 6) (- (fuel t6_5 5) (distance t7_5 t8_5 5))))) )
(assert (=> (and (refuel t9_5 5) true) (and (= (fuel t9_5 6) (capacity t9_5 5)))) )
(assert (=> (distinct (at person1 5) (at person1 6)) (or (and (board t0_5 t1_5 t2_5 5)(= t0_5 person1) ) (and (debark t3_5 t4_5 t5_5 5)(= t3_5 person1) ) (and (fly t6_5 t7_5 t8_5 5)(= t6_5 person1) ) )) )
(assert (=> (distinct (at person2 5) (at person2 6)) (or (and (board t0_5 t1_5 t2_5 5)(= t0_5 person2) ) (and (debark t3_5 t4_5 t5_5 5)(= t3_5 person2) ) (and (fly t6_5 t7_5 t8_5 5)(= t6_5 person2) ) )) )
(assert (=> (distinct (at person3 5) (at person3 6)) (or (and (board t0_5 t1_5 t2_5 5)(= t0_5 person3) ) (and (debark t3_5 t4_5 t5_5 5)(= t3_5 person3) ) (and (fly t6_5 t7_5 t8_5 5)(= t6_5 person3) ) )) )
(assert (=> (distinct (at person4 5) (at person4 6)) (or (and (board t0_5 t1_5 t2_5 5)(= t0_5 person4) ) (and (debark t3_5 t4_5 t5_5 5)(= t3_5 person4) ) (and (fly t6_5 t7_5 t8_5 5)(= t6_5 person4) ) )) )
(assert (=> (distinct (at plane1 5) (at plane1 6)) (or (and (board t0_5 t1_5 t2_5 5)(= t0_5 plane1) ) (and (debark t3_5 t4_5 t5_5 5)(= t3_5 plane1) ) (and (fly t6_5 t7_5 t8_5 5)(= t6_5 plane1) ) )) )
(assert (= (capacity plane1 5) (capacity plane1 6)) )
(assert (= (distance city1 city2 5) (distance city1 city2 6)) )
(assert (= (distance city1 city3 5) (distance city1 city3 6)) )
(assert (= (distance city1 city4 5) (distance city1 city4 6)) )
(assert (= (distance city1 city5 5) (distance city1 city5 6)) )
(assert (= (distance city2 city1 5) (distance city2 city1 6)) )
(assert (= (distance city2 city3 5) (distance city2 city3 6)) )
(assert (= (distance city2 city4 5) (distance city2 city4 6)) )
(assert (= (distance city2 city5 5) (distance city2 city5 6)) )
(assert (= (distance city3 city1 5) (distance city3 city1 6)) )
(assert (= (distance city3 city2 5) (distance city3 city2 6)) )
(assert (= (distance city3 city4 5) (distance city3 city4 6)) )
(assert (= (distance city3 city5 5) (distance city3 city5 6)) )
(assert (= (distance city4 city1 5) (distance city4 city1 6)) )
(assert (= (distance city4 city2 5) (distance city4 city2 6)) )
(assert (= (distance city4 city3 5) (distance city4 city3 6)) )
(assert (= (distance city4 city5 5) (distance city4 city5 6)) )
(assert (= (distance city5 city1 5) (distance city5 city1 6)) )
(assert (= (distance city5 city2 5) (distance city5 city2 6)) )
(assert (= (distance city5 city3 5) (distance city5 city3 6)) )
(assert (= (distance city5 city4 5) (distance city5 city4 6)) )
(assert (=> (distinct (fuel plane1 5) (fuel plane1 6)) (or (and (fly t6_5 t7_5 t8_5 5)(= t6_5 plane1) ) (and (refuel t9_5 5)(= t9_5 plane1) ) )) )
(assert (=> (distinct (in person1 5) (in person1 6)) (or (and (board t0_5 t1_5 t2_5 5)(= t0_5 person1) ) (and (debark t3_5 t4_5 t5_5 5)(= t3_5 person1) ) )) )
(assert (=> (distinct (in person2 5) (in person2 6)) (or (and (board t0_5 t1_5 t2_5 5)(= t0_5 person2) ) (and (debark t3_5 t4_5 t5_5 5)(= t3_5 person2) ) )) )
(assert (=> (distinct (in person3 5) (in person3 6)) (or (and (board t0_5 t1_5 t2_5 5)(= t0_5 person3) ) (and (debark t3_5 t4_5 t5_5 5)(= t3_5 person3) ) )) )
(assert (=> (distinct (in person4 5) (in person4 6)) (or (and (board t0_5 t1_5 t2_5 5)(= t0_5 person4) ) (and (debark t3_5 t4_5 t5_5 5)(= t3_5 person4) ) )) )
(assert (=> (distinct (onboard plane1 5) (onboard plane1 6)) (or (and (board t0_5 t1_5 t2_5 5)(= t1_5 plane1) ) (and (debark t3_5 t4_5 t5_5 5)(= t4_5 plane1) ) )) )
(assert (= (seats plane1 5) (seats plane1 6)) )
(assert (or (board t0_5 t1_5 t2_5 5) (debark t3_5 t4_5 t5_5 5) (fly t6_5 t7_5 t8_5 5) (refuel t9_5 5) ) )
(assert (or (not (board t0_5 t1_5 t2_5 5)) (not (debark t3_5 t4_5 t5_5 5))) )
(assert (or (not (board t0_5 t1_5 t2_5 5)) (not (fly t6_5 t7_5 t8_5 5))) )
(assert (or (not (board t0_5 t1_5 t2_5 5)) (not (refuel t9_5 5))) )
(assert (or (not (debark t3_5 t4_5 t5_5 5)) (not (fly t6_5 t7_5 t8_5 5))) )
(assert (or (not (debark t3_5 t4_5 t5_5 5)) (not (refuel t9_5 5))) )
(assert (or (not (fly t6_5 t7_5 t8_5 5)) (not (refuel t9_5 5))) )
(assert (and (= (at person1 6) city5) (= (at person2 6) city5) (= (at person3 6) city5) (= (at person4 6) city5)))
(check-sat)
